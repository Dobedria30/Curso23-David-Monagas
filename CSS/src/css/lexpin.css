* {
  margin: 0;
  padding:0;
  font-family: "Space Grotesk", sans-serif;
  z-index: 10;
}

/*Barra de navegacion*/
nav {
  background-color: rgb(0, 85, 255);
  color: white;
  font-size: 25px;
  /*al poner display flex, el elemento se convierte en una fila automaticamente*/
  display: flex;
  /*Eje principal, solo se puede usar si el elemento es flex*/
  justify-content: space-between;
  /*Eje secundario, solo se puede usar si el elemento es flex*/
  align-items: center;
  /*height: 300px;*/
  /*padding es la distancia entre el borde de la caja y su contenido*/
  padding: 20px;
  /*
  padding: 20px; 20 px en todas las direcciones
  padding: 20px 0; 20 arriba y abajo, 0 derecha e izquierda
  padding: 20px 0 20px 0; 20 arriba, 0 derecha, 20 abajo, 0 izquierda
  */
  border-radius: 0 0 15px 15px;
  /*Radio de los bordes, se lee arriba izquierda, arriba derecha
  abajo izquierda, abajo derecha*/
}
/*
  nav div selecciona todos los divs dentro de nav
  nav > div selecciona solo los divs hijos directos de nav
*/
nav div {
  display: flex;
  gap: 20px 
  /* el "gap" es el espaciado entre los elementos de la fila o columna*/
}
/*
Las pseudo-clases manejan el estado de un elemento
:hover se activa cuando el mouse pasa por encima del elemento
:active se activa cuando el elemento es presionado
:focus se activa cuando el elemento es seleccionado
:visited se activa cuando el elemento ha sido visitado
:link se activa cuando el elemento es un enlace (link)
:first-child se activa cuando el elemento es el primer hijo de su padre
:last-child se activa cuando el elemento es el ultimo hijo de su padre
*/
nav div a:visited, nav div a:link {
  color: white;
  text-decoration: none;
  transition: all 1s ease;
}

.enlace:hover {
color: black;
}
/*
con el "#" se identifica un id, y con el "." se identifica una clase
*/
/*
#Inicio:hover, #Introduccion:hover {
  color: rgb(0, 0, 0); ;
}
*/
/*
  Lo eliminare para usar una propiedad de flex, que me ahorrara
  escribir este codigo
  nav div a {
    margin: 0 20px;
  }
*/

/*MAIN*/
main{
  /*para agragar una color de forma gradiente, escribimos
  linear-gradient en el backgraunt-image o tambien en el backgraunt */
  background-color: black;
  background-image: linear-gradient(to right, #bd4444, #d8e751);
  display: flex;
  flex-direction: column;
  padding: 40px 20px;
}

/*
GRID
Grid es un tipo de display que permite manejar
un sistema de filas y columnas (se pueden utilizar %, px y fr)
*/

header {
  height: 80vh;
  min-height: 80vh;
  background-size: cover;
  /*opacity; 0.1;*/
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  border-radius: 25px;
  /* eje principal (solo para el caso de usar "display: grid")*/
  justify-items: center;
  /* eje secundario (solo para el caso de usar "display: grid")*/
  align-content: center;
  gap: 20px;
  position: relative;
}

header > div{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
}

header > div > div {
  display: flex;
  flex-direction: column;
  gap: 5px;
}

/*
  los pseudo-elementos permiten seleccionar partes de un elemento
  ::before se activa antes de que el elemento sea renderizado
  ::after se activa despues de que el elemento sea renderizado
  ::first-letter se activa en la primera letra del elemento
  ::first-line se activa en la primera linea del elemento
  ::selection se activa ciand el elemento es seleccionado
  ::placeholder se activa cuando el elemento es un placeholder
  ::marker se activa en el marcador de una lista
*/

/*
  position es una propiedad que permite posicionar un elemento
  static: posicion normal
  relative: posicion realtiva al elemento (puedes moverlo)
  absolute: posicion absoluta al elemento padre (puedes moverlo)
  fixed: posicion fija al viewport (pantalla) (se queda fijo en la pantalla)
  stiky: posicion fija al scroll (tiene su espacio eb ek html, pero se queda fijo al hacer scroll)
*/

header::before {
  background-image: url("./../../../../../../Downloads/Viktor2.jpg");
  background-size: cover;
  background-position: center;
  content: "";
  position: absolute;
  z-index: 5;
  opacity: 0.5;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 25px;
  border: 5px solid rgb(247, 246, 246);
  box-shadow: 10px 5px 12px 5px rgba(0, 0, 0, 1);
}

h1{
  font-size: 50px;
  color: rgb(193, 116, 8);
  text-align: center;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
}

h2 {
  font-size: 30px;
  color: rgb(193, 116, 8);
  text-align: center;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
}

.info {
  font-size: 20px;
  color: rgb(247, 246, 246);
  text-align: center;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  font-weight: 300;
}

button {
  background-color: rgb(193, 116, 8);
  color: white;
  font-size: 20px;
  padding: 10px 20px;
  border-radius: 20px;
  border: none;
  cursor: pointer;
  transition: all 0.3s ease;
}

button:hover {
  background-color: rgb(0, 85, 255);
  color: black;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
}

p, h1, h2, h3, h4, h5, h6 {
  cursor: default;
}

/*Animacion*/
.gradient-background {
  background: linear-gradient(175deg,#bd4444,#d8e751,#ffffff);
  background-size: 180% 180%;
  animation: gradient-animation 15s ease infinite;
}
/*@keyframes se usa para crear animaciones, y va por porcentajes (%)*/
@keyframes gradient-animation {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}
